<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <title>Slinks</title>

  <link rel="icon" type="image/x-icon" href="/static/icon.svg">
  <link rel="stylesheet" href="/static/styles/index.css">
  <script src="https://unpkg.com/htmx.org@2.0.2"></script>
</head>

<body onload="onLoad()">
  <main id="main">
    <form hx-post="/slinks" hx-swap="outerHTML" hx-target="#response" method="post"
      hx-disabled-elt="#url-input, #submit">
      <label for="url">Input URL</label>

      <div class="input" id="input">
        <input type="url" name="url" id="url-input" required>
        <button class="bordered-button" id="submit" type="submit">Enter</button>
      </div>
    </form>

    <div id="response" class="response">
      <p>Your short link will be here</p>
    </div>
  </main>
</body>

<script>
  async function writeToClipboard(text) {
    await navigator.clipboard.writeText(text);

    // remove the alert if already exists
    closeAlert();

    const input = document.getElementById("main");
    input.insertAdjacentHTML("beforeend", `
      <div id="alert">
        <p>Copied to clipboard!</p>
        <button class="icon-button" onclick="closeAlert()">
          <svg width="24px" height="24px" stroke-width="1.5" viewBox="0 0 24 24" fill="none"
            xmlns="http://www.w3.org/2000/svg" color="#000000">
            <path
              d="M6.75827 17.2426L12.0009 12M17.2435 6.75736L12.0009 12M12.0009 12L6.75827 6.75736M12.0009 12L17.2435 17.2426"
              stroke="#000000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
          </svg>
        </button>
      </div>
    `);
  }

  function closeAlert() {
    const alert = document.getElementById("alert");
    if (alert !== null) {
      alert.remove();
    }
  }

  function onLoad() {
    const prefersDarkTheme = window.matchMedia('(prefers-color-scheme: dark)');
    prefersDarkTheme.onchange = function (event) {
      // toggle dark theme on change
      toggleDarkTheme(event.matches);
    }

    // toggle dark theme on load
    toggleDarkTheme(prefersDarkTheme.matches);
  }

  function toggleDarkTheme(booleanValue) {
    const bodyClassList = document.body.classList;
    if (booleanValue) {
      bodyClassList.remove("light");
      bodyClassList.add("dark");
    } else {
      bodyClassList.remove("dark");
      bodyClassList.add("light");
    }
  }
</script>

</html>